/*
 * test_data_tsdf.hpp
 *
 *  Created on: Jan 30, 2019
 *      Author: Gregory Kramida
 *   Copyright: 2019 Gregory Kramida
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */

#pragma once

#include <unsupported/Eigen/CXX11/Tensor>
#include <Eigen/Eigen>
#include "../src/math/tensors.hpp"
#include "../src/math/typedefs.hpp"

namespace eig = Eigen;

namespace test_data {
static eig::Matrix<unsigned short, eig::Dynamic, eig::Dynamic> depth_image_region = [] {
	eig::Matrix<unsigned short, eig::Dynamic, eig::Dynamic> depth_image_region(3,18);
	depth_image_region <<
	3233, 3246, 3243, 3256, 3253, 3268, 3263, 3279, 3272, 3289, 3282, 3299, 3291, 3308, 3301, 3317, 3310, 3326,
	3233, 3246, 3243, 3256, 3253, 3268, 3263, 3279, 3272, 3289, 3282, 3299, 3291, 3308, 3301, 3317, 3310, 3326,
	3233, 3246, 3243, 3256, 3253, 3268, 3263, 3279, 3272, 3289, 3282, 3299, 3291, 3308, 3301, 3317, 3310, 3326;
	return depth_image_region;
}();

static eig::MatrixXf out_sdf_field =
		[] {
			eig::MatrixXf out_sdf_field(16,16);
			out_sdf_field <<
			0.8667111f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f,
			0.7550358f, 0.9348034f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f,
			0.65500134f, 0.7687389f, 0.88503355f, 0.93358153f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f,
			0.5375206f, 0.61014885f, 0.78497523f, 0.8335411f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f,
			0.43746826f, 0.5100786f, 0.674951f, 0.73348874f, 0.949794f, 0.98340505f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f,
			0.31999943f, 0.36687848f, 0.5749106f, 0.63345426f, 0.8497476f, 0.87506765f, 0.99062914f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f,
			0.20832418f, 0.26682612f, 0.47484037f, 0.53340787f, 0.70737f, 0.7687866f, 0.82769984f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f,
			0.10827779f, 0.16677974f, 0.37479398f, 0.42007563f, 0.6072938f, 0.6687402f, 0.7276177f, 0.89989895f, 0.9251892f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f,
			0.0082314f, 0.06673931f, 0.27474162f, 0.3200173f, 0.44060943f, 0.5549907f, 0.5835771f, 0.7998585f, 0.82513684f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f,
			-0.09181499f, -0.03331303f, 0.13484357f, 0.2062857f, 0.2776563f, 0.4499614f, 0.4835486f, 0.69980615f, 0.72510237f, 0.904864f, 0.9593963f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f,
			-0.19185542f, -0.1449704f, -0.03123283f, 0.10622143f, 0.17758606f, 0.349915f, 0.38350818f, 0.5997657f, 0.62005514f, 0.7375359f, 0.8593678f, 0.9101092f, 1.0f, 1.0f, 1.0f, 1.0f,
			-0.29189584f, -0.24503468f, -0.13129114f, -0.01502037f, 0.03356337f, 0.24986266f, 0.28344986f, 0.4997134f, 0.5200147f, 0.6374776f, 0.752449f, 0.766921f, 0.9831607f, 1.0f, 1.0f, 1.0f,
			-0.4301488f, -0.3625035f, -0.28989312f, -0.12502669f, -0.06648897f, 0.14979838f, 0.18342136f, 0.3573179f, 0.41248795f, 0.47016737f, 0.64991707f, 0.6668686f, 0.88312024f, 0.9000837f, 1.0f, 1.0f,
			-0.5874693f, -0.47997233f, -0.43309924f, -0.22507308f, -0.16653536f, 0.04975795f, 0.07506608f, 0.19062756f, 0.30499098f, 0.32528636f, 0.5498647f, 0.5668461f, 0.7830798f, 0.79754585f, 0.90939397f, 1.0f,
			-0.6875276f, -0.5800306f, -0.53313965f, -0.3251314f, -0.26658174f, -0.09260177f, -0.03118515f, 0.09058117f, 0.20493864f, 0.22523998f, 0.44983622f, 0.46679375f, 0.63987964f, 0.69065684f, 0.80935353f, 0.919944f,
			-0.84488386f, -0.69169396f, -0.63319796f, -0.4251897f, -0.3666341f, -0.19269584f, -0.13125537f, -0.07237195f, 0.09989738f, 0.12519954f, 0.3497779f, 0.3667414f, 0.5397975f, 0.59059256f, 0.6426274f, 0.8165538f;
			return out_sdf_field;
		}();

static eig::MatrixXus depth_00064_sample = [] {
	eig::MatrixXus depth_00064_sample(1,20);
	depth_00064_sample << 2121, 2126, 2124, 2123, 2128, 2133, 2138, 2130, 2135, 2140, 2145,
	2147, 2142, 2147, 2152, 2158, 2150, 2155, 2160, 2165;
	return depth_00064_sample;

}();

static eig::Tensor<float, 3> TSDF_slice01 =
		[] {
			float data[] = {
					-0.20475684f, -0.2718329f, -0.33940297f, -0.41053814f, -0.47973615f, -0.54754835f, -0.6144799f, -0.69139594f, -0.76291186f, -0.82926893f, -0.8988074f, -0.97098565f, -1.0f, -1.0f, -1.0f, -1.0f,
					-0.13041718f, -0.19898264f, -0.26726198f, -0.33195686f, -0.40533316f, -0.48085f, -0.54812276f, -0.61513406f, -0.6857901f, -0.7568284f, -0.8265122f, -0.89905554f, -0.96868193f, -1.0f, -1.0f, -1.0f,
					-0.05159303f, -0.11795311f, -0.19352509f, -0.26949567f, -0.3329001f, -0.40127334f, -0.4697546f, -0.5401842f, -0.6103374f, -0.6821744f, -0.7519416f, -0.8297361f, -0.9008161f, -0.97198033f, -1.0f, -1.0f,
					0.01631528f, -0.05366355f, -0.11860802f, -0.18563195f, -0.25372428f, -0.32249835f, -0.3909312f, -0.4608303f, -0.5386583f, -0.6148077f, -0.6832592f, -0.7546924f, -0.82786226f, -0.9039304f, -0.9779266f, -1.0f,
					0.09734481f, 0.03163889f, -0.0351347f, -0.10349526f, -0.17178132f, -0.24583338f, -0.32430065f, -0.3944121f, -0.46513748f, -0.5358427f, -0.60939413f, -0.68361086f, -0.7554948f, -0.8274629f, -0.9029112f, -0.98226213f,
					0.18223374f, 0.11868029f, 0.04477277f, -0.03297701f, -0.10733827f, -0.17565785f, -0.2446696f, -0.31756383f, -0.38871688f, -0.45973283f, -0.5306705f, -0.6053954f, -0.68548465f, -0.7603347f, -0.832349f, -0.90591604f,
					0.25901046f, 0.18068849f, 0.11306702f, 0.04537329f, -0.0254929f, -0.09573101f, -0.16611888f, -0.23505314f, -0.30887496f, -0.38855296f, -0.46718267f, -0.53770316f, -0.607904f, -0.6806403f, -0.75637394f, -0.83188707f,
					0.3345288f, 0.2674229f, 0.19761248f, 0.12810154f, 0.06117373f, -0.01198053f, -0.09179189f, -0.17100646f, -0.2414055f, -0.3113508f, -0.38460863f, -0.45659837f, -0.5285464f, -0.60253733f, -0.6757326f, -0.75543445f,
					0.4215054f, 0.35445613f, 0.28388125f, 0.20457803f, 0.12537389f, 0.05252584f, -0.01491904f, -0.08574425f, -0.15761329f, -0.22937803f, -0.30043197f, -0.37168336f, -0.45156848f, -0.5349218f, -0.6126381f, -0.68388426f,
					0.5017995f, 0.42136607f, 0.34753007f, 0.28029305f, 0.21193548f, 0.14263166f, 0.07018074f, 0.00108704f, -0.06929486f, -0.15131308f, -0.23241787f, -0.31055582f, -0.38096604f, -0.45473945f, -0.52764934f, -0.60274744f,
					0.57773066f, 0.51035875f, 0.44209582f, 0.3743246f, 0.30558106f, 0.23218466f, 0.15120803f, 0.06889998f, -0.00930652f, -0.07774457f, -0.14970823f, -0.22116004f, -0.2947412f, -0.37067902f, -0.44117716f, -0.51609796f,
					0.67372465f, 0.6072543f, 0.5338877f, 0.4515655f, 0.37155968f, 0.29368994f, 0.22628976f, 0.1552522f, 0.08366852f, 0.00998154f, -0.06056577f, -0.1305498f, -0.20934565f, -0.29290763f, -0.37548465f, -0.45198423f,
					0.7540442f, 0.6730221f, 0.59785986f, 0.529439f, 0.46049577f, 0.3898285f, 0.3201082f, 0.24996398f, 0.17710625f, 0.09599998f, 0.01350045f, -0.06811767f, -0.14037861f, -0.21186395f, -0.28660965f, -0.3620803f,
					0.8337743f, 0.76607686f, 0.69736683f, 0.6300881f, 0.56024337f, 0.484772f, 0.40280667f, 0.31985265f, 0.24074091f, 0.17126425f, 0.09886324f, 0.02796873f, -0.04654675f, -0.12094676f, -0.19398032f, -0.27120334f,
					0.9401298f, 0.8696056f, 0.7920019f, 0.7094442f, 0.6278216f, 0.5527272f, 0.48454177f, 0.41284856f, 0.34142134f, 0.26991662f, 0.19591151f, 0.12376829f, 0.04146173f, -0.04442408f, -0.12813507f, -0.20937918f,
					1.0f, 0.9367048f, 0.86319065f, 0.7964156f, 0.72762364f, 0.6566673f, 0.58679205f, 0.5157612f, 0.43653396f, 0.35248694f, 0.26573387f, 0.18438174f, 0.10772794f, 0.03523007f, -0.03899559f, -0.11253878f
			};

			auto mapped_t = Eigen::TensorMap<Eigen::Tensor<float, 3, Eigen::RowMajor>>(data, 16, 1, 16);
			Eigen::Tensor<float, 3> TSDF_slice01 = Eigen::TensorLayoutSwapOp<Eigen::Tensor<float, 3, Eigen::RowMajor>>(mapped_t);
			return TSDF_slice01;
		}();

} //namespace test_data
